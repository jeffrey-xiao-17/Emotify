{"version":3,"sources":["css/LoginView.module.css","css/InteractionView.module.css","css/HistoryView.module.css","Nav.js","Components/InteractionsPage/ChatBot.jsx","utilities.js","Components/EmpathizePage/empathize.js","Components/InteractionsPage/InteractionView.jsx","Components/ResultsPage/ResultsView.jsx","Components/HistoryPage/components/HistoryCell.js","Components/HistoryPage/HistoryView.jsx","Avatar.js","Components/LoginPage/components/IntroAvatar.js","Components/LoginPage/LoginView.jsx","Components/EmpathizePage/EmpathizeView.jsx","App.js","serviceWorker.js","index.js","css/ChatBot.module.css","css/Results.module.css"],"names":["module","exports","Media","createMedia","breakpoints","mobile","tablet","computer","Nav","state","hideFixedMenu","setState","fixed","showFixedMenu","this","greaterThan","Visibility","once","onBottomPassed","onBottomPassedReverse","Segment","textAlign","style","padding","vertical","Menu","pointing","secondary","size","border","Container","className","to","Item","Header","as","role","aria-label","position","Component","ChatBot","expressions","s","index","i","MOUTH_OPTIONS","length","res","eye","eyebrow","mouth","EYE_OPTIONS","EYEBROW_OPTIONS","computeOptions","props","currentSentiment","styles","window","cx","avatar","maxHeight","height","width","avatarStyle","topType","bot","accessoriesType","hairColor","hatColor","facialHairType","clotheType","clotheColor","skinColor","eyeType","eyebrowType","mouthType","randomOption","arr","Math","floor","random","analyzeText","text","a","axios","post","response","data","getSourceText","get","config","angle","spread","startVelocity","elementCount","dragFriction","duration","stagger","perspective","colors","InteractionView","target","current","parseFloat","generatedBotProps","avatarGenerator","message","messages","authors","id","name","isTyping","uniqueNamesGenerator","idCount","inputDisabled","toFixed","targetSentiment","messagesRemaining","parseInt","myRef","React","createRef","focus","bind","value","event","preventDefault","justSent","prevRemaining","prevSentiment","nlpRes","sentimentResult","documentSentiment","score","newSentiment","computeNewSentiment","prevID","authorId","createdOn","Date","isSend","setTimeout","previousState","map","m","messageSentiment","change","max","min","full","Popup","trigger","gameNumbers","Statistic","Group","Value","Label","label","Content","image","bottom","yourAuthorId","showIsTyping","history","row","onSubmit","handleSubmit","textfield","ref","type","disabled","placeholder","onChange","e","onTodoChange","sendButton","Button","positive","newButton","onClick","resetState","active","dictionaries","names","ResultsView","userScore","simScore","diff","Message","resultsMessage","fontSize","Grid","columns","relaxed","Column","getScoreDescription","line","key","info","icon","header","list","tipsAndTakeaways","HistoryCell","element","Card","Image","floated","pfp","src","Meta","topic","Description","widths","simscore","extra","date","HistoryView","tempData","chartData","labels","datasets","backgroundColor","pointRadius","pointHitRadius","pointBackgroundColor","pointBorderWidth","pointHoverRadius","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","forEach","entry","push","mainContainer","chartCard","margin","options","maintainAspectRatio","historyCards","COLORS","AVATAR_OPTIONS","randomAvatarConfiguration","configuration","IntroAvatar","abs","botSentiment","userSentiment","round","LoginView","avatars","display","flexDirection","flexWrap","zIndex","opacity","justifyContent","titleText","buttonContainer","console","log","EmpathizeView","sourceText","title","link","inputText","sourceTextSentiment","inputTextSentiment","finished","loadNewText","stuff","Util","comments","sentiment","magnitude","updateAvatar","THRESHOLD","quote","href","inputRow","App","useState","path","exact","component","render","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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AAQ,SAClD,kBAAC,QAAD,CACEtJ,KAAMoI,EACN7J,MAAO,IACPD,OAAQ,IACRiL,QAAS,CAAEC,qBAAqB,MAGpC,6BACA,kBAAClC,GAAA,EAAKnD,MAAN,CAAY3H,UAAWyB,KAAOwL,cAC3BtB,EAAS3E,KAAI,SAAC6D,EAAShK,GAAV,OACZ,kBAAC,GAAD,CAAayJ,IAAKzJ,EAAGgK,QAASA,SAlBtC,a,0CCzDEqC,GAAS,CACX,QACA,SACA,SACA,SACA,SACA,SACA,UACA,aACA,cACA,eACA,YACA,eACA,OACA,MACA,SAGEC,GAAiB,CACnBlL,QAAS,CACL,SACA,WACA,MACA,QACA,SACA,aACA,aACA,aACA,aACA,kBACA,cACA,cACA,gBACA,iBACA,gBACA,gBACA,cACA,kBACA,qBACA,sBACA,qBACA,mBACA,oBACA,wBACA,oBACA,oBACA,mBACA,wBACA,sBACA,sBACA,qBACA,sBACA,iBACA,qBACA,8BAEJE,gBAAiB,CACb,QACA,OACA,iBACA,iBACA,QACA,aACA,aAEJC,UAAW,CACP,SACA,QACA,SACA,eACA,QACA,YACA,aACA,WACA,MACA,cAEJC,SAAU6K,GACV5K,eAAgB,CACZ,QACA,cACA,aACA,gBACA,iBACA,mBAEJC,WAAY,CACR,cACA,gBACA,gBACA,eACA,SACA,UACA,gBACA,iBACA,cAEJC,YAAa0K,GACbxK,QAAS,CACL,QACA,MACA,UAEA,UACA,QACA,SACA,OACA,SACA,YACA,OACA,aAEJC,YAAa,CACT,QACA,eACA,UACA,iBACA,cACA,gBACA,uBACA,eACA,sBACA,iBACA,SACA,iBAEJC,UAAW,CACP,YACA,UACA,YACA,SACA,UACA,MACA,aACA,UACA,QACA,SACA,UACA,SAEJH,UAAW,CACP,SACA,SACA,OACA,QACA,QACA,YACA,UAID,SAAS2K,KACZ,IAAMC,EAAgB,GACtB,IAAK,IAAM3E,KAAQyE,GACfE,EAAc3E,GAAQ7F,EAAasK,GAAezE,IAEtD,OAAO2E,E,ICjHIC,G,uKAvCX,IAAM5M,EACJqC,KAAKwK,IAAIxO,KAAKw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","file":"static/js/main.80c9e2fe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoginView\":\"LoginView_LoginView__2yoB4\",\"titleText\":\"LoginView_titleText__1eIQt\",\"button\":\"LoginView_button__2phJV\",\"buttonContainer\":\"LoginView_buttonContainer__19GBR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bottom\":\"InteractionView_bottom__u_lBK\",\"image\":\"InteractionView_image__31h1p\",\"settings\":\"InteractionView_settings__3Qbc6\",\"full\":\"InteractionView_full__22zYH\",\"gameNumbers\":\"InteractionView_gameNumbers__27akv\",\"remainingMessages\":\"InteractionView_remainingMessages__qpkde\",\"howTo\":\"InteractionView_howTo__2rGdY\",\"howToMessage\":\"InteractionView_howToMessage__faxBB\",\"textfield\":\"InteractionView_textfield__3cZ4b\",\"row\":\"InteractionView_row__Y2Czf\",\"sendButton\":\"InteractionView_sendButton__1wGXf\",\"newButton\":\"InteractionView_newButton__15zdU\",\"history\":\"InteractionView_history__2tHIT\",\"quote\":\"InteractionView_quote__39lvh\",\"inputRow\":\"InteractionView_inputRow__1ln6e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"HistoryView_mainContainer__1Go6d\",\"chartCard\":\"HistoryView_chartCard__fX8aO\",\"HistoryCell\":\"HistoryView_HistoryCell__2InzL\",\"message\":\"HistoryView_message__yyRhj\",\"pfp\":\"HistoryView_pfp__2lFFK\",\"historyCards\":\"HistoryView_historyCards__z5pS3\"};","import React, { Component } from \"react\";\r\nimport { createMedia } from \"@artsy/fresnel\";\r\nimport { Link } from \"react-router-dom\";\r\n// import PropTypes from \"prop-types\";\r\nimport {\r\n  Header,\r\n  Container,\r\n  Menu,\r\n  Segment,\r\n  Visibility,\r\n} from \"semantic-ui-react\";\r\n\r\nconst { Media } = createMedia({\r\n  breakpoints: {\r\n    mobile: 0,\r\n    tablet: 768,\r\n    computer: 1024,\r\n  },\r\n});\r\n\r\nclass Nav extends Component {\r\n  state = {};\r\n\r\n  hideFixedMenu = () => this.setState({ fixed: false });\r\n  showFixedMenu = () => this.setState({ fixed: true });\r\n\r\n  render() {\r\n    const { fixed } = this.state;\r\n    return (\r\n      <Media greaterThan=\"mobile\">\r\n        <Visibility\r\n          once={false}\r\n          onBottomPassed={this.showFixedMenu}\r\n          onBottomPassedReverse={this.hideFixedMenu}\r\n        >\r\n          <Segment textAlign=\"center\" style={{ padding: \"1em 0em\" }} vertical>\r\n            <Menu\r\n              fixed={fixed ? \"top\" : null}\r\n              pointing={!fixed}\r\n              secondary={!fixed}\r\n              size=\"large\"\r\n              style={{ border: \"none\" }}\r\n            >\r\n              <Container>\r\n                <Link className=\"active item\" to=\"/\">\r\n                  <Menu.Item>\r\n                    <Header as=\"h1\">\r\n                      EM\r\n                      <span role=\"img\" aria-label=\"surprised\">\r\n                        😮\r\n                      </span>\r\n                      TIFY\r\n                    </Header>\r\n                  </Menu.Item>\r\n                </Link>\r\n\r\n                <Menu.Item position=\"right\">\r\n                  <Link className=\"item\" to=\"/empathize\">\r\n                    Empathize\r\n                  </Link>\r\n                  <Link className=\"item\" to=\"/moodboost\">\r\n                    MoodBoost\r\n                  </Link>\r\n                  <Link className=\"item\" to=\"/results\">\r\n                    Results\r\n                  </Link>\r\n                  <Link className=\"item\" to=\"/history\">\r\n                    History\r\n                  </Link>\r\n                </Menu.Item>\r\n              </Container>\r\n            </Menu>\r\n          </Segment>\r\n        </Visibility>\r\n      </Media>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n","import React, { Component } from \"react\";\r\nimport styles from \"../../css/ChatBot.module.css\";\r\nimport cx from \"classnames\";\r\nimport Avatar from \"avataaars\";\r\n\r\nclass ChatBot extends Component {\r\n  render() {\r\n    const expressions = computeOptions(this.props.currentSentiment);\r\n    return (\r\n      <div className={styles.window}>\r\n        <Avatar\r\n          className={cx(\"ui image\", styles.avatar)}\r\n          style={{\r\n            maxHeight: \"75vh\",\r\n            height: \"100vh\",\r\n            width: \"100%\",\r\n          }}\r\n          avatarStyle=\"Transparent\"\r\n          topType={this.props.bot.topType}\r\n          accessoriesType={this.props.bot.accessoriesType}\r\n          hairColor={this.props.bot.hairColor}\r\n          hatColor={this.props.bot.hatColor}\r\n          facialHairType={this.props.bot.facialHairType}\r\n          clotheType={this.props.bot.clotheType}\r\n          clotheColor={this.props.bot.clotheColor}\r\n          skinColor={this.props.bot.skinColor}\r\n          // The following three can change based on sentiment and words\r\n          eyeType={expressions.eye}\r\n          eyebrowType={expressions.eyebrow}\r\n          mouthType={expressions.mouth}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChatBot;\r\n\r\nconst EYE_OPTIONS = [\r\n  \"Cry\", // -1\r\n  \"Side\", // -0.8\r\n  \"EyeRoll\", // -0.6\r\n  \"Close\", // -0.4\r\n  \"Squint\", // -0.2\r\n  \"Default\", // 0 -------------\r\n  \"WinkWacky\", // 0.2\r\n  \"Wink\", // 0.4\r\n  \"Surprised\", // 0.6\r\n  \"Happy\", // 0.8\r\n  \"Hearts\", // 1\r\n];\r\n\r\nconst EYEBROW_OPTIONS = [\r\n  \"Angry\",\r\n  \"AngryNatural\",\r\n  \"SadConcerned\",\r\n  \"SadConcernedNatural\",\r\n  \"Default\",\r\n  \"DefaultNatural\",\r\n  \"UpDown\",\r\n  \"UpDownNatural\",\r\n  \"RaisedExcited\",\r\n  \"RaisedExcitedNatural\",\r\n];\r\n\r\nconst MOUTH_OPTIONS = [\r\n  \"ScreamOpen\",\r\n  \"Concerned\",\r\n  \"Sad\",\r\n  \"Disbelief\",\r\n  \"Serious\",\r\n  \"Default\",\r\n  \"Eating\",\r\n  \"Twinkle\",\r\n  \"Smile\",\r\n  \"Tongue\",\r\n];\r\n\r\nfunction computeOptions(s) {\r\n  var index = -1;\r\n  for (var i = 0; i < MOUTH_OPTIONS.length; i++) {\r\n    if (s <= -0.9 + i * 0.2) {\r\n      index = i;\r\n      break;\r\n    }\r\n  }\r\n  index = index === -1 ? 9 : index;\r\n  var res = {\r\n    eye: 0,\r\n    eyebrow: 0,\r\n    mouth: 0,\r\n  };\r\n  // if (index == 0) {\r\n  //   res.eye = EYE_OPTIONS[Math.round(Math.random(1))];\r\n  //   res.eyebrow = EYEBROW_OPTIONS[Math.round(Math.random(1))];\r\n  //   res.mouth = MOUTH_OPTIONS[Math.round(Math.random(1))];\r\n  // } else if (index == 9) {\r\n  //   res.eye = EYE_OPTIONS[9 - Math.round(Math.random(1))];\r\n  //   res.eyebrow = EYEBROW_OPTIONS[9 - Math.round(Math.random(1))];\r\n  //   res.mouth = MOUTH_OPTIONS[9 - Math.round(Math.random(1))];\r\n  // } else {\r\n  //   res.eye =\r\n  //     EYE_OPTIONS[\r\n  //       index +\r\n  //         Math.floor(Math.random() + 0.5) *\r\n  //           (Math.floor(Math.random() * 2) == 1 ? 1 : -1)\r\n  //     ];\r\n  //   res.eyebrow =\r\n  //     EYEBROW_OPTIONS[\r\n  //       index +\r\n  //         Math.floor(Math.random() + 0.5) *\r\n  //           (Math.floor(Math.random() * 2) == 1 ? 1 : -1)\r\n  //     ];\r\n  //   res.mouth =\r\n  //     MOUTH_OPTIONS[\r\n  //       index +\r\n  //         Math.floor(Math.random() + 0.5) *\r\n  //           (Math.floor(Math.random() * 2) == 1 ? 1 : -1)\r\n  //     ];\r\n  // }\r\n  res.eye = EYE_OPTIONS[index];\r\n  res.eyebrow = EYEBROW_OPTIONS[index];\r\n  res.mouth = MOUTH_OPTIONS[index];\r\n  return res;\r\n}\r\n","// Returns a random item in an array.\r\nexport function randomOption(arr) {\r\n    return arr[Math.floor(Math.random() * arr.length)]\r\n}","import * as Util from \"../../utilities\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst ANALYZE_ENTITY_SENTIMENT_METHOD =\r\n  \"https://language.googleapis.com/v1/documents:analyzeEntitySentiment\";\r\n\r\nconst ACCESS_TOKEN =\r\n  \"ya29.c.Ko8B3Afv9eriAEJnvg-riokaH7tz3KKGhpxwy6sEoDTQae8Xi3PYa-iHCCAUGDZWMp8xRphOvxaoIAp7vEG50G9jU-O4hVdtUlDXyPk1GwTPOn1HClBAQXk66ZbE6a4RBJ1tc2TQfxUb22pBHnvDRZasG5nRv7OpHvpiYwRxPns1UuNfXGjPEs36LhpRcR4Dvuc\";\r\n\r\nexport async function analyzeText(text) {\r\n  const response = await axios.post(\r\n    \"https://autismproject.uc.r.appspot.com/process\",\r\n    {\r\n      text,\r\n    }\r\n  );\r\n  return response.data;\r\n}\r\n\r\nexport async function getSourceText() {\r\n   const response = await axios.get(\"https://autismproject.uc.r.appspot.com/source\");\r\n   return response.data;\r\n}\r\n\r\n// Returns some natural language text and its URL in the format\r\n// [sourceText, link]\r\nexport async function getText() {\r\n  return Util.randomOption(SAMPLES);\r\n}\r\n// add export\r\n\r\nconst SAMPLES = [\r\n  [\r\n    \"I appreciate working from home but I still want to work in my office!!!\",\r\n    \"WFH vs office\",\r\n    \"https://news.ycombinator.com/item?id=24452280\",\r\n  ],\r\n];\r\n","import React, { Component } from \"react\";\r\nimport styles from \"../../css/InteractionView.module.css\";\r\nimport cx from \"classnames\";\r\n// Components\r\nimport ChatBot from \"./ChatBot\";\r\nimport { ChatFeed } from \"react-bell-chat\";\r\nimport { Button, Statistic, Popup } from \"semantic-ui-react\";\r\nimport { uniqueNamesGenerator, names } from \"unique-names-generator\";\r\nimport Confetti from \"react-dom-confetti\";\r\nimport { analyzeText } from \"../EmpathizePage/empathize\";\r\n\r\nconst config = {\r\n  angle: 90,\r\n  spread: 360,\r\n  startVelocity: 85,\r\n  elementCount: \"149\",\r\n  dragFriction: \"0.11\",\r\n  duration: 3000,\r\n  stagger: 3,\r\n  width: \"63px\",\r\n  height: \"100px\",\r\n  perspective: \"1000px\",\r\n  colors: [\"#a864fd\", \"#29cdff\", \"#78ff44\", \"#ff718d\", \"#fdff6a\"],\r\n};\r\n\r\nclass InteractionView extends Component {\r\n  static config = {\r\n    dictionaries: [names],\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    const target = Math.random();\r\n    var current =\r\n      (Math.floor(Math.random() * 2) === 1 ? 1 : -1) * Math.random();\r\n    while (parseFloat(target) - parseFloat(current) < 0.4) {\r\n      current = (Math.floor(Math.random() * 2) === 1 ? 1 : -1) * Math.random();\r\n    }\r\n\r\n    this.state = {\r\n      generatedBotProps: props.avatarGenerator(),\r\n      message: \"\",\r\n      messages: [],\r\n      authors: [\r\n        {\r\n          id: 1,\r\n          name: \"User\",\r\n          isTyping: false,\r\n        },\r\n        {\r\n          id: 2,\r\n          name: uniqueNamesGenerator(InteractionView.config),\r\n          isTyping: false,\r\n        },\r\n      ],\r\n      idCount: 1,\r\n      inputDisabled: false,\r\n      currentSentiment: parseFloat(current).toFixed(1),\r\n      targetSentiment: parseFloat(target).toFixed(1),\r\n      messagesRemaining: parseInt(Math.random() * 4 + 1, 10),\r\n    };\r\n    this.myRef = React.createRef();\r\n    this.focus = this.focus.bind(this);\r\n  }\r\n\r\n  focus() {\r\n    this.myRef.current.focus();\r\n  }\r\n\r\n  onTodoChange(value) {\r\n    this.setState({\r\n      message: value,\r\n    });\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    if (this.state.message !== null && this.state.message !== \"\") {\r\n      const justSent = this.state.message;\r\n      const prevRemaining = this.state.messagesRemaining;\r\n      const prevSentiment = parseFloat(this.state.currentSentiment);\r\n      const nlpRes = (await analyzeText(justSent)).sentimentResult\r\n        .documentSentiment.score;\r\n      const newSentiment = this.computeNewSentiment(prevSentiment, nlpRes);\r\n      const prevID = this.state.idCount;\r\n      this.setState({\r\n        message: \"\",\r\n        messages: [\r\n          ...this.state.messages,\r\n          {\r\n            authorId: 1,\r\n            id: prevID + 1,\r\n            idCount: this.state.idCount + 1,\r\n            message: justSent,\r\n            createdOn: new Date(),\r\n            isSend: false,\r\n          },\r\n        ],\r\n        currentSentiment: newSentiment,\r\n        messagesRemaining: this.state.messagesRemaining - 1,\r\n      });\r\n      setTimeout(() => {\r\n        this.setState((previousState) => ({\r\n          messages: previousState.messages.map((m) =>\r\n            m.id === prevID + 1 ? { ...m, isSend: true } : m\r\n          ),\r\n        }));\r\n      }, 500);\r\n\r\n      if (\r\n        newSentiment.toFixed(1) >=\r\n          parseFloat(this.state.targetSentiment).toFixed(1) ||\r\n        prevRemaining === 1\r\n      ) {\r\n        this.setState({ inputDisabled: true });\r\n      }\r\n\r\n      this.focus();\r\n    }\r\n  }\r\n\r\n  computeNewSentiment(prevSentiment, messageSentiment) {\r\n    var res = parseFloat(prevSentiment);\r\n    var change = (parseFloat(messageSentiment) - parseFloat(prevSentiment)) / 2;\r\n    change = change < 0 ? Math.max(-0.5, change) : Math.min(0.5, change);\r\n    res += change < 0 ? Math.min(-0.1, change) : Math.max(change, 0.1);\r\n    if (res > 1) {\r\n      res = 1;\r\n    } else if (res < -1) {\r\n      res = -1;\r\n    }\r\n    return parseFloat(res.toFixed(1));\r\n  }\r\n\r\n  resetState() {\r\n    const target = Math.random();\r\n    var current =\r\n      (Math.floor(Math.random() * 2) === 1 ? 1 : -1) * Math.random();\r\n    while (parseFloat(target) - parseFloat(current) < 0.4) {\r\n      current = (Math.floor(Math.random() * 2) === 1 ? 1 : -1) * Math.random();\r\n    }\r\n    this.setState({\r\n      generatedBotProps: this.props.avatarGenerator(),\r\n      message: \"\",\r\n      messages: [],\r\n      authors: [\r\n        {\r\n          id: 1,\r\n          name: \"User\",\r\n          isTyping: false,\r\n        },\r\n        {\r\n          id: 2,\r\n          name: uniqueNamesGenerator(InteractionView.config),\r\n          isTyping: false,\r\n        },\r\n      ],\r\n      currentSentiment: parseFloat(current).toFixed(1),\r\n      targetSentiment: parseFloat(target).toFixed(1),\r\n      messagesRemaining: parseInt(Math.random() * 3 + 1, 10),\r\n      idCount: 1,\r\n      inputDisabled: false,\r\n    });\r\n    this.focus();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.full}>\r\n        <Popup\r\n          trigger={\r\n            <div className={styles.gameNumbers}>\r\n              <Statistic.Group>\r\n                <Statistic>\r\n                  <Statistic.Value>\r\n                    {this.state.currentSentiment}\r\n                  </Statistic.Value>\r\n                  <Statistic.Label>Current Mood</Statistic.Label>\r\n                </Statistic>\r\n                <Statistic>\r\n                  <Statistic.Value>\r\n                    {this.state.targetSentiment}\r\n                  </Statistic.Value>\r\n                  <Statistic.Label>Target Mood</Statistic.Label>\r\n                </Statistic>\r\n              </Statistic.Group>\r\n              <Statistic.Group>\r\n                <Statistic\r\n                  label=\"Messages Remaining\"\r\n                  value={this.state.messagesRemaining}\r\n                />\r\n              </Statistic.Group>\r\n            </div>\r\n          }\r\n        >\r\n          <Popup.Header>\r\n            {this.state.inputDisabled\r\n              ? parseFloat(this.state.currentSentiment) >=\r\n                parseFloat(this.state.targetSentiment)\r\n                ? \"Hooray!\"\r\n                : \"Next Time!\"\r\n              : \"Confused?\"}\r\n          </Popup.Header>\r\n          <Popup.Content>\r\n            {this.state.inputDisabled\r\n              ? parseFloat(this.state.currentSentiment) >=\r\n                parseFloat(this.state.targetSentiment)\r\n                ? `Great work! You managed to bring ${this.state.authors[1].name}'s mood up to ${this.state.currentSentiment}!`\r\n                : `Sadly, ${\r\n                    this.state.authors[1].name\r\n                  }'s mood was still ${parseFloat(\r\n                    parseFloat(this.state.targetSentiment) -\r\n                      parseFloat(this.state.currentSentiment)\r\n                  ).toFixed(1)} short from the goal.`\r\n              : `With the ${this.state.messagesRemaining} messages you have remaining, \r\n                    try to bring ${this.state.authors[1].name}'s mood up from \r\n                    ${this.state.currentSentiment} to ${this.state.targetSentiment}!`}\r\n          </Popup.Content>\r\n        </Popup>\r\n        <div className={styles.image}>\r\n          <ChatBot\r\n            bot={this.state.generatedBotProps}\r\n            currentSentiment={this.state.currentSentiment}\r\n          />\r\n        </div>\r\n\r\n        <div className={styles.bottom}>\r\n          <ChatFeed\r\n            messages={this.state.messages}\r\n            authors={this.state.authors}\r\n            yourAuthorId={1}\r\n            showIsTyping={true}\r\n            className={styles.history}\r\n          />\r\n          <div className={styles.row}>\r\n            <form\r\n              onSubmit={(event) => {\r\n                this.handleSubmit(event);\r\n              }}\r\n              className={styles.row}\r\n            >\r\n              <div className={cx(\"ui focus input\", styles.textfield)}>\r\n                <input\r\n                  ref={this.myRef}\r\n                  type=\"text\"\r\n                  disabled={this.state.inputDisabled}\r\n                  placeholder=\"Enter your message here.\"\r\n                  value={this.state.message}\r\n                  onChange={(e) => this.onTodoChange(e.target.value)}\r\n                />\r\n              </div>\r\n              <div>\r\n                <button\r\n                  type=\"submit\"\r\n                  disabled={this.state.inputDisabled}\r\n                  className={cx(\"ui primary button\", styles.sendButton)}\r\n                >\r\n                  Send\r\n                </button>\r\n              </div>\r\n            </form>\r\n            <Button\r\n              positive\r\n              className={styles.newButton}\r\n              onClick={() => this.resetState()}\r\n            >\r\n              Meet Someone New!\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <Confetti\r\n          active={\r\n            this.state.inputDisabled &&\r\n            parseFloat(this.state.currentSentiment) >=\r\n              parseFloat(this.state.targetSentiment)\r\n          }\r\n          config={config}\r\n          style={{ textAlign: \"center\" }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InteractionView;\r\n","import React, { Component } from \"react\";\r\nimport styles from \"../../css/Results.module.css\";\r\nimport { Grid, Message, Statistic } from \"semantic-ui-react\";\r\n\r\nclass ResultsView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userScore: props.userScore,\r\n      simScore: props.simScore,\r\n    };\r\n  }\r\n\r\n  tipsAndTakeaways(diff) {\r\n    if (diff <= -1) {\r\n      return [\r\n        \"If possible, try to express positive emotions and relating to your partner's facial expression.\",\r\n        'Words like \"enjoy,\" \"awesome,\" and \"ecstatic\" are strong indicators of positive emotion.',\r\n      ];\r\n    } else if (diff <= -0.5) {\r\n      return [\r\n        \"Keep it up! Understanding others at first glance is not easy - it takes time and practice!\",\r\n        \"Listen to your partner when he/she talks. They are telling you more than just words!\",\r\n      ];\r\n    } else if (diff <= 0) {\r\n      return [\r\n        \"You're have a great grasp of your partner's emotional situation!\",\r\n        'Try to focus on your partner\\'s eyes, mouth, and eyebrows to pick up subtle cues. Body language speaks the loudest in a conversation.Words like \"enjoy,\" \"awesome,\" and \"ecstatic\" are strong indicators of positive emotion.',\r\n      ];\r\n    } else if (diff <= 0.5) {\r\n      return [\r\n        \"You're have a great grasp of your partner's emotional situation!\",\r\n        \"Try to focus on your partner's eyes, mouth, and eyebrows to pick up subtle cues. Body language speaks the loudest in a conversation.\",\r\n      ];\r\n    } else if (diff <= 1) {\r\n      return [\r\n        \"Nice job! Every person you meet will be different - practice makes perfect!\",\r\n        \"Listen to your partner when he/she talks. They are telling you more than just words!\",\r\n      ];\r\n    }\r\n    return [\r\n      \"If possible, try to put yourself in your partner's situation - how does that make you feel?\",\r\n      'Words like \"fine,\" \"sure,\" and \"okay\" are useful in leveling your\\'s and your partner\\'s emotions',\r\n    ];\r\n  }\r\n\r\n  getScoreDescription(score) {\r\n    if (score <= -0.5) {\r\n      return [\r\n        \"You are often at odds with your partner's emotions.\",\r\n        \"Possible causes are lack of attention and/or eye contact, negative language, or ignoring your partner.\",\r\n        \"Example: Your partner is frowning and visibly upset. Your response is to downplay their situation or aggravate their emotional state.\",\r\n      ];\r\n    } else if (score <= -0.2) {\r\n      return [\r\n        \"There are subtle differences between you and your partner's emotions.\",\r\n        'Possible causes are using mild words such as \"like,\" \"sure,\" and \"okay.\"',\r\n        \"Example: Your partner is ecstatic about a recent event. Your response is unengaging and does not match his/her intensity.\",\r\n      ];\r\n    } else if (score <= 0.2) {\r\n      return [\r\n        \"You have a great understanding of your partner's emotions. Keep doing what you're doing!\",\r\n        \"A non-zero score could simply be a mathematical error. No need to worry - we need practice too!\",\r\n        \"Example: You and your partner are on the same level. Think of your facial expression and theirs - they probably match!\",\r\n      ];\r\n    } else if (score <= 0.5) {\r\n      return [\r\n        \"There are subtle differences between you and your partner's emotions.\",\r\n        'Possible causes are using mild words such as \"like,\" \"sure,\" and \"okay.\"',\r\n        \"Example: Your partner is worried about personal matters. Your response is unengaging and uninviting.\",\r\n      ];\r\n    }\r\n    return [\r\n      \"You are often at odds with your partner's emotions.\",\r\n      \"Possible causes are lack of attention and/or eye contact, overly positive language, or ignoring your partner.\",\r\n      \"Example: Your partner is frowning and visibly upset. Your response is to laugh at their situation or aggravate their emotional state.\",\r\n    ];\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className={styles.width}>\r\n          <Message\r\n            className={styles.resultsMessage}\r\n            style={{ textAlign: \"center\" }}\r\n          >\r\n            <Message.Header>\r\n              <h1 style={{ fontSize: \"40px\" }}>Results</h1>\r\n            </Message.Header>\r\n\r\n            <Grid columns={2} relaxed=\"very\" className={styles.columns}>\r\n              <Grid.Column>\r\n                <Statistic\r\n                  label=\"Your Sentiment Score\"\r\n                  value={this.state.userScore}\r\n                />\r\n                {this.getScoreDescription(this.state.userScore).map(\r\n                  (line, i) => {\r\n                    return <p key={i}>{line}</p>;\r\n                  }\r\n                )}\r\n              </Grid.Column>\r\n              <Grid.Column>\r\n                <Statistic\r\n                  label=\"Sim's Sentiment Score\"\r\n                  value={this.state.simScore}\r\n                />\r\n                {this.getScoreDescription(this.state.simScore).map(\r\n                  (line, i) => {\r\n                    return <p key={i}>{line}</p>;\r\n                  }\r\n                )}\r\n              </Grid.Column>\r\n            </Grid>\r\n          </Message>\r\n        </div>\r\n        <div className={styles.bottom}>\r\n          <Message\r\n            info\r\n            icon=\"lightbulb outline\"\r\n            header=\"Care for a few tips and takeaways?\"\r\n            list={this.tipsAndTakeaways(\r\n              parseFloat(this.state.userScore) - parseFloat(this.state.simScore)\r\n            )}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResultsView;\r\n","import React from \"react\";\r\nimport styles from \"../../../css/HistoryView.module.css\";\r\nimport { Statistic, Card, Image } from \"semantic-ui-react\";\r\n\r\nfunction HistoryCell({ element }) {\r\n  return (\r\n    <Card>\r\n      <Card.Content>\r\n        <Image\r\n          floated=\"right\"\r\n          size=\"tiny\"\r\n          className={styles.pfp}\r\n          src={element.src}\r\n        />\r\n        <Card.Header>{element.name}</Card.Header>\r\n        <Card.Meta>Topic: {element.topic}</Card.Meta>\r\n        <Card.Description>\r\n          <Statistic.Group widths=\"two\" size=\"tiny\">\r\n            <Statistic>\r\n              <Statistic.Value>{element.score}</Statistic.Value>\r\n              <Statistic.Label>You</Statistic.Label>\r\n            </Statistic>\r\n            <Statistic>\r\n              <Statistic.Value>{element.simscore}</Statistic.Value>\r\n              <Statistic.Label>{element.name}</Statistic.Label>\r\n            </Statistic>\r\n          </Statistic.Group>\r\n        </Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>{element.date}</Card.Content>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default HistoryCell;\r\n","import React from \"react\";\r\nimport styles from \"../../css/HistoryView.module.css\";\r\nimport HistoryCell from \"./components/HistoryCell\";\r\n\r\nimport { Message, Card } from \"semantic-ui-react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nfunction HistoryView() {\r\n  const tempData = [\r\n    {\r\n      date: \"October 12, 2020\",\r\n      name: \"Steve\",\r\n      topic: \"Apple\",\r\n      score: 7,\r\n      simscore: 6,\r\n      src: \"https://react.semantic-ui.com/images/avatar/large/steve.jpg\",\r\n    },\r\n    {\r\n      date: \"October 13, 2020\",\r\n      name: \"Molly\",\r\n      topic: \"The Big Bang\",\r\n      score: 8,\r\n      simscore: 9,\r\n      src: \"https://react.semantic-ui.com/images/avatar/large/molly.png\",\r\n    },\r\n    {\r\n      date: \"October 14, 2020\",\r\n      name: \"Jenny\",\r\n      topic: \"Football\",\r\n      score: 9,\r\n      simscore: 5,\r\n      src: \"https://react.semantic-ui.com/images/avatar/large/jenny.jpg\",\r\n    },\r\n  ];\r\n\r\n  const chartData = {\r\n    labels: [],\r\n    datasets: [\r\n      {\r\n        label: \"Correlation\",\r\n        data: [],\r\n        backgroundColor: [\"#68C3D4\"],\r\n        pointRadius: 1,\r\n        pointHitRadius: 10,\r\n        pointBackgroundColor: \"#fff\",\r\n        pointBorderWidth: 1,\r\n        pointHoverRadius: 5,\r\n        borderCapStyle: \"butt\",\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: \"miter\",\r\n      },\r\n    ],\r\n  };\r\n  tempData.forEach((entry) => {\r\n    chartData.labels.push(entry.date);\r\n    chartData.datasets[0].data.push(entry.score - entry.simscore);\r\n  });\r\n\r\n  return (\r\n    <div className={styles.mainContainer}>\r\n      <Message className={styles.message} style={{ textAlign: \"center\" }}>\r\n        <Message.Header>\r\n          <h1 style={{ fontSize: \"40px\" }}>Interaction History</h1>\r\n        </Message.Header>\r\n        <br />\r\n        <br />\r\n        <Card className={styles.chartCard} style={{ margin: \"auto\" }}>\r\n          <Line\r\n            data={chartData}\r\n            width={500}\r\n            height={250}\r\n            options={{ maintainAspectRatio: false }}\r\n          />\r\n        </Card>\r\n        <br />\r\n        <Card.Group className={styles.historyCards}>\r\n          {tempData.map((element, i) => (\r\n            <HistoryCell key={i} element={element} />\r\n          ))}\r\n        </Card.Group>\r\n      </Message>\r\n        \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HistoryView;\r\n","import { randomOption } from \"./utilities\";\r\n\r\n// Color options for both hats and clothes\r\nconst COLORS = [\r\n    \"Black\",\r\n    \"Blue01\",\r\n    \"Blue02\",\r\n    \"Blue03\",\r\n    \"Gray01\",\r\n    \"Gray02\",\r\n    \"Heather\",\r\n    \"PastelBlue\",\r\n    \"PastelGreen\",\r\n    \"PastelOrange\",\r\n    \"PastelRed\",\r\n    \"PastelYellow\",\r\n    \"Pink\",\r\n    \"Red\",\r\n    \"White\",\r\n]\r\n\r\nconst AVATAR_OPTIONS = {\r\n    topType: [\r\n        \"NoHair\",\r\n        \"Eyepatch\",\r\n        \"Hat\",\r\n        \"Hijab\",\r\n        \"Turban\",\r\n        \"WinterHat1\",\r\n        \"WinterHat2\",\r\n        \"WinterHat3\",\r\n        \"WinterHat4\",\r\n        \"LongHairBigHair\",\r\n        \"LongHairBob\",\r\n        \"LongHairBun\",\r\n        \"LongHairCurly\",\r\n        \"LongHairDreads\",\r\n        \"LongHairCurvy\",\r\n        \"LongHairFrida\",\r\n        \"LongHairFro\",\r\n        \"LongHairFroBand\",\r\n        \"LongHairNotTooLong\",\r\n        \"LongHairShavedSides\",\r\n        \"LongHairMiaWallace\",\r\n        \"LongHairStraight\",\r\n        \"LongHairStraight2\",\r\n        \"LongHairStraightStand\",\r\n        \"ShortHairDreads01\",\r\n        \"ShortHairDreads02\",\r\n        \"ShortHairFrizzle\",\r\n        \"ShortHairShaggyMullet\",\r\n        \"ShortHairShortCurly\",\r\n        \"ShortHairShortRound\",\r\n        \"ShortHairShortFlat\",\r\n        \"ShortHairShortWaved\",\r\n        \"ShortHairSides\",\r\n        \"ShortHairTheCaesar\",\r\n        \"ShortHairTheCaesarSidePart\",\r\n    ],\r\n    accessoriesType: [\r\n        \"Blank\",\r\n        \"Kurt\",\r\n        \"Prescription01\",\r\n        \"Prescription02\",\r\n        \"Round\",\r\n        \"Sunglasses\",\r\n        \"Wayfarers\",\r\n    ],\r\n    hairColor: [\r\n        \"Auburn\",\r\n        \"Black\",\r\n        \"Blonde\",\r\n        \"BlondeGolden\",\r\n        \"Brown\",\r\n        \"BrownDark\",\r\n        \"PastelPink\",\r\n        \"Platinum\",\r\n        \"Red\",\r\n        \"SilverGray\",\r\n    ],\r\n    hatColor: COLORS,\r\n    facialHairType: [\r\n        \"Blank\",\r\n        \"BeardMedium\",\r\n        \"BeardLight\",\r\n        \"BeardMagestic\",\r\n        \"MoustacheFancy\",\r\n        \"MoustacheMagnum\",\r\n    ],\r\n    clotheType: [\r\n        \"BlazerShirt\",\r\n        \"BlazerSweater\",\r\n        \"CollarSweater\",\r\n        \"GraphicShirt\",\r\n        \"Hoodie\",\r\n        \"Overall\",\r\n        \"ShirtCrewNeck\",\r\n        \"ShirtScoopNeck\",\r\n        \"ShirtVNeck\",\r\n    ],\r\n    clotheColor: COLORS,\r\n    eyeType: [\r\n        \"Close\",\r\n        \"Cry\",\r\n        \"Default\",\r\n        // \"Dizzy\",\r\n        \"EyeRoll\",\r\n        \"Happy\",\r\n        \"Hearts\",\r\n        \"Side\",\r\n        \"Squint\",\r\n        \"Surprised\",\r\n        \"Wink\",\r\n        \"WinkWacky\",\r\n    ],\r\n    eyebrowType: [\r\n        \"Angry\",\r\n        \"AngryNatural\",\r\n        \"Default\",\r\n        \"DefaultNatural\",\r\n        \"FlatNatural\",\r\n        \"RaisedExcited\",\r\n        \"RaisedExcitedNatural\",\r\n        \"SadConcerned\",\r\n        \"SadConcernedNatural\",\r\n        \"UnibrowNatural\",\r\n        \"UpDown\",\r\n        \"UpDownNatural\",\r\n    ],\r\n    mouthType: [\r\n        \"Concerned\",\r\n        \"Default\",\r\n        \"Disbelief\",\r\n        \"Eating\",\r\n        \"Grimace\",\r\n        \"Sad\",\r\n        \"ScreamOpen\",\r\n        \"Serious\",\r\n        \"Smile\",\r\n        \"Tongue\",\r\n        \"Twinkle\",\r\n        \"Vomit\",\r\n    ],\r\n    skinColor: [\r\n        \"Tanned\",\r\n        \"Yellow\",\r\n        \"Pale\",\r\n        \"Light\",\r\n        \"Brown\",\r\n        \"DarkBrown\",\r\n        \"Black\",\r\n    ]\r\n}\r\n\r\nexport function randomAvatarConfiguration() {\r\n    const configuration = {};\r\n    for (const type in AVATAR_OPTIONS) {\r\n        configuration[type] = randomOption(AVATAR_OPTIONS[type])\r\n    }\r\n    return configuration;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport styles from \"../../../css/ChatBot.module.css\";\r\nimport cx from \"classnames\";\r\nimport Avatar from \"avataaars\";\r\n\r\nclass IntroAvatar extends Component {\r\n  render() {\r\n    const expressions =\r\n      Math.abs(this.props.botSentiment - this.props.userSentiment) > 0.1\r\n        ? computeOptions(\r\n            1.5 * this.props.botSentiment + 0.5 * this.props.userSentiment\r\n          )\r\n        : {\r\n            eye: this.props.bot.eyeType,\r\n            eyebrow: this.props.bot.eyebrowType,\r\n            mouth: this.props.bot.mouthType,\r\n          };\r\n\r\n    return (\r\n      <div className={styles.window}>\r\n        <Avatar\r\n          className={cx(\"ui image\", styles.avatar)}\r\n          style={{\r\n            maxHeight: \"150vh\",\r\n            height: \"100px\",\r\n            width: \"100px\",\r\n          }}\r\n          avatarStyle=\"Transparent\"\r\n          topType={this.props.bot.topType}\r\n          accessoriesType={this.props.bot.accessoriesType}\r\n          hairColor={this.props.bot.hairColor}\r\n          hatColor={this.props.bot.hatColor}\r\n          facialHairType={this.props.bot.facialHairType}\r\n          clotheType={this.props.bot.clotheType}\r\n          clotheColor={this.props.bot.clotheColor}\r\n          skinColor={this.props.bot.skinColor}\r\n          // The following three can change based on sentiment and words\r\n          eyeType={expressions.eye}\r\n          eyebrowType={expressions.eyebrow}\r\n          mouthType={expressions.mouth}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IntroAvatar;\r\nconst EYE_OPTIONS = [\r\n  \"Cry\", // -1\r\n  \"Side\", // -0.8\r\n  \"EyeRoll\", // -0.6\r\n  \"Close\", // -0.4\r\n  \"Squint\", // -0.2\r\n  \"Default\", // 0\r\n  \"WinkWacky\", // 0.2\r\n  \"Wink\", // 0.4\r\n  \"Surprised\", // 0.6\r\n  \"Happy\", // 0.8\r\n  \"Hearts\", // 1\r\n];\r\n\r\nconst EYEBROW_OPTIONS = [\r\n  \"Angry\",\r\n  \"AngryNatural\",\r\n  \"SadConcerned\",\r\n  \"SadConcernedNatural\",\r\n  \"Default\",\r\n  \"DefaultNatural\",\r\n  \"RaisedExcited\",\r\n  \"RaisedExcitedNatural\",\r\n  \"UpDown\",\r\n  \"UpDownNatural\",\r\n];\r\n\r\nconst MOUTH_OPTIONS = [\r\n  \"ScreamOpen\",\r\n  \"Concerned\",\r\n  \"Sad\",\r\n  \"Disbelief\",\r\n  \"Serious\",\r\n  \"Default\",\r\n  \"Eating\",\r\n  \"Twinkle\",\r\n  \"Smile\",\r\n  \"Tongue\",\r\n];\r\n\r\nfunction computeOptions(s) {\r\n  var index = -1;\r\n  for (var i = 0; i < MOUTH_OPTIONS.length; i++) {\r\n    if (s <= -0.9 + i * 0.2) {\r\n      index = i;\r\n      break;\r\n    }\r\n  }\r\n  index = index === -1 ? 9 : index;\r\n  var res = {\r\n    eye: 0,\r\n    eyebrow: 0,\r\n    mouth: 0,\r\n  };\r\n  if (index === 0) {\r\n    res.eye = EYE_OPTIONS[Math.round(Math.random(1))];\r\n    res.eyebrow = EYEBROW_OPTIONS[Math.round(Math.random(1))];\r\n    res.mouth = MOUTH_OPTIONS[Math.round(Math.random(1))];\r\n  } else if (index === 9) {\r\n    res.eye = EYE_OPTIONS[9 - Math.round(Math.random(1))];\r\n    res.eyebrow = EYEBROW_OPTIONS[9 - Math.round(Math.random(1))];\r\n    res.mouth = MOUTH_OPTIONS[9 - Math.round(Math.random(1))];\r\n  } else {\r\n    res.eye =\r\n      EYE_OPTIONS[\r\n        index +\r\n          Math.floor(Math.random() + 0.5) *\r\n            (Math.floor(Math.random() * 2) === 1 ? 1 : -1)\r\n      ];\r\n    res.eyebrow =\r\n      EYEBROW_OPTIONS[\r\n        index +\r\n          Math.floor(Math.random() + 0.5) *\r\n            (Math.floor(Math.random() * 2) === 1 ? 1 : -1)\r\n      ];\r\n    res.mouth =\r\n      MOUTH_OPTIONS[\r\n        index +\r\n          Math.floor(Math.random() + 0.5) *\r\n            (Math.floor(Math.random() * 2) === 1 ? 1 : -1)\r\n      ];\r\n  }\r\n  return res;\r\n}\r\n","import React from \"react\";\r\nimport styles from \"../../css/LoginView.module.css\";\r\nimport GoogleButton from \"react-google-button\";\r\nimport { randomAvatarConfiguration } from \"../../Avatar\";\r\nimport IntroAvatar from \"./components/IntroAvatar\";\r\n\r\nfunction LoginView() {\r\n  var avatars = [];\r\n  for (let i = 0; i < 250; i++) {\r\n    avatars.push(randomAvatarConfiguration());\r\n  }\r\n\r\n  return (\r\n    <div className={styles.LoginView}>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          flexWrap: \"wrap\",\r\n          position: \"absolute\",\r\n          zIndex: -1,\r\n          opacity: 0.3,\r\n          justifyContent: \"space-around\",\r\n        }}\r\n      >\r\n        {avatars.map((avatar, i) => (\r\n          <IntroAvatar key={i} bot={avatar} />\r\n        ))}\r\n      </div>\r\n      <h1 className={styles.titleText}>\r\n        EM\r\n        <span role=\"img\" aria-label=\"surprised\">\r\n          😮\r\n        </span>\r\n        TIFY\r\n      </h1>\r\n      <div className={styles.buttonContainer}>\r\n        <GoogleButton\r\n          onClick={() => {\r\n            // login with google, then if logged in:\r\n            // setAuthed(true)\r\n            console.log(\"Google button clicked\");\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginView;\r\n","import React, { Component } from \"react\";\r\nimport styles from \"../../css/InteractionView.module.css\";\r\nimport cx from \"classnames\";\r\nimport Avatar from \"avataaars\";\r\nimport { Message, Button } from \"semantic-ui-react\";\r\nimport { getText, analyzeText, getSourceText } from \"./empathize\";\r\nimport Confetti from \"react-dom-confetti\";\r\nimport * as Util from \"../../utilities\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst config = {\r\n  angle: 90,\r\n  spread: 360,\r\n  startVelocity: 85,\r\n  elementCount: \"149\",\r\n  dragFriction: \"0.11\",\r\n  duration: 3000,\r\n  stagger: 3,\r\n  width: \"63px\",\r\n  height: \"100px\",\r\n  perspective: \"1000px\",\r\n  colors: [\"#a864fd\", \"#29cdff\", \"#78ff44\", \"#ff718d\", \"#fdff6a\"],\r\n};\r\n\r\nconst EYE_OPTIONS = [\r\n  \"Cry\", // -1\r\n  \"Side\", // -0.8\r\n  \"EyeRoll\", // -0.6\r\n  \"Close\", // -0.4\r\n  \"Squint\", // -0.2\r\n  \"Default\", // 0\r\n  \"WinkWacky\", // 0.2\r\n  \"Wink\", // 0.4\r\n  \"Surprised\", // 0.6\r\n  \"Happy\", // 0.8\r\n  \"Hearts\", // 1\r\n];\r\n\r\nconst EYEBROW_OPTIONS = [\r\n  \"Angry\",\r\n  \"AngryNatural\",\r\n  \"SadConcerned\",\r\n  \"SadConcernedNatural\",\r\n  \"Default\",\r\n  \"DefaultNatural\",\r\n  \"RaisedExcited\",\r\n  \"RaisedExcitedNatural\",\r\n  \"UpDown\",\r\n  \"UpDownNatural\",\r\n];\r\n\r\nconst MOUTH_OPTIONS = [\r\n  \"ScreamOpen\",\r\n  \"Concerned\",\r\n  \"Sad\",\r\n  \"Disbelief\",\r\n  \"Serious\",\r\n  \"Default\",\r\n  \"Eating\",\r\n  \"Twinkle\",\r\n  \"Smile\",\r\n  \"Tongue\",\r\n];\r\n\r\nclass EmpathizeView extends Component {\r\n  static THRESHOLD = 0.2;\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      avatarGenerator: props.avatarGenerator,\r\n      avatar: props.avatarGenerator(),\r\n      sourceText: \"\",\r\n      title: \"\",\r\n      link: \"\",\r\n      inputText: \"\",\r\n      sourceTextSentiment: 0,\r\n      inputTextSentiment: 0,\r\n      finished: false,\r\n    };\r\n    this.myRef = React.createRef();\r\n    this.focus = this.focus.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadNewText();\r\n  }\r\n\r\n  async loadNewText() {\r\n    const stuff = await getSourceText();\r\n    const link = stuff.link;\r\n    const title = stuff.title;\r\n    const sourceText = Util.randomOption(stuff.comments);\r\n    this.setState({\r\n      sourceText: sourceText,\r\n      title: title,\r\n      link: link,\r\n      sourceTextSentiment: (await analyzeText(sourceText)).sentimentResult\r\n        .documentSentiment.score,\r\n    });\r\n    const data = await analyzeText(sourceText);\r\n    const sentiment = data[\"sentimentResult\"];\r\n    const score = sentiment[\"documentSentiment\"][\"score\"];\r\n    const magnitude = sentiment[\"documentSentiment\"][\"magnitude\"];\r\n    console.log(data);\r\n    console.log(score, magnitude);\r\n    this.updateAvatar(score, magnitude);\r\n    const entitySentiment = data[\"entitySentimentResult\"];\r\n  }\r\n\r\n  updateAvatar(score, magnitude) {\r\n    const avatar = this.state.avatar;\r\n\r\n    // EYE\r\n    var index = -1;\r\n    for (var i = 0; i < EYE_OPTIONS.length; i++) {\r\n      if (score <= -0.9 + i * 0.2) {\r\n        index = i;\r\n        break;\r\n      }\r\n    }\r\n    index = index === -1 ? 9 : index;\r\n\r\n    if (magnitude < 3) {\r\n      index *= index < 0 ? 3.0 / 2 : 2.0 / 3;\r\n    } else if (magnitude > 6) {\r\n      index =\r\n        index < 0\r\n          ? Math.max(index * 2, 0)\r\n          : Math.min(index * 2, EYE_OPTIONS.length - 1);\r\n    }\r\n\r\n    avatar.eyeType = EYE_OPTIONS[index];\r\n\r\n    // EYEBROW\r\n    index = -1;\r\n    for (i = 0; i < EYEBROW_OPTIONS.length; i++) {\r\n      if (score <= -0.9 + i * 0.2) {\r\n        index = i;\r\n        break;\r\n      }\r\n    }\r\n    index = index === -1 ? 9 : index;\r\n\r\n    if (magnitude < 3) {\r\n      index *= index < 0 ? 3.0 / 2 : 2.0 / 3;\r\n    } else if (magnitude > 6) {\r\n      index =\r\n        index < 0\r\n          ? Math.max(index * 2, 0)\r\n          : Math.min(index * 2, EYEBROW_OPTIONS.length - 1);\r\n    }\r\n\r\n    avatar.eyebrowType = EYEBROW_OPTIONS[index];\r\n\r\n    // MOUTH\r\n    index = -1;\r\n    for (i = 0; i < MOUTH_OPTIONS.length; i++) {\r\n      if (score <= -0.9 + i * 0.2) {\r\n        index = i;\r\n        break;\r\n      }\r\n    }\r\n    index = index === -1 ? 9 : index;\r\n\r\n    if (magnitude < 3) {\r\n      index *= index < 0 ? 3.0 / 2 : 2.0 / 3;\r\n    } else if (magnitude > 6) {\r\n      index =\r\n        index < 0\r\n          ? Math.max(index * 2, 0)\r\n          : Math.min(index * 2, MOUTH_OPTIONS.length - 1);\r\n    }\r\n\r\n    avatar.mouthType = MOUTH_OPTIONS[index];\r\n  }\r\n\r\n  focus() {\r\n    this.myRef.current.focus();\r\n  }\r\n\r\n  resetState() {\r\n    this.setState({\r\n      avatar: this.state.avatarGenerator(),\r\n      sourceText: \"\",\r\n      title: \"\",\r\n      link: \"\",\r\n      inputText: \"\",\r\n      sourceTextSentiment: 0,\r\n      inputTextSentiment: 0,\r\n      finished: false,\r\n    });\r\n    this.loadNewText();\r\n  }\r\n\r\n  onTodoChange(value) {\r\n    this.setState({\r\n      inputText: value,\r\n    });\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    if (this.state.inputText !== null && this.state.inputText !== \"\") {\r\n      const res = (await analyzeText(this.state.inputText)).sentimentResult\r\n        .documentSentiment.score;\r\n      if (\r\n        Math.abs(\r\n          parseFloat(res) - parseFloat(this.state.sourceTextSentiment)\r\n        ) <= EmpathizeView.THRESHOLD\r\n      ) {\r\n        this.setState({\r\n          inputTextSentiment: parseFloat(res),\r\n          finished: true,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          inputText: \"\",\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.width}>\r\n        <Message className={styles.quote}>\r\n          <Message.Header>\r\n            <h1>\r\n              <a href={this.state.link}>{this.state.title}</a>\r\n            </h1>\r\n          </Message.Header>\r\n          <p style={{ fontSize: \"1.25rem\" }}>{this.state.sourceText}</p>\r\n        </Message>\r\n        <div className={styles.window}>\r\n          <Avatar\r\n            className={cx(\"ui image\", styles.avatar)}\r\n            style={{\r\n              maxHeight: \"50vh\",\r\n              height: \"100vh\",\r\n              width: \"100%\",\r\n            }}\r\n            avatarStyle=\"Transparent\"\r\n            topType={this.state.avatar.topType}\r\n            accessoriesType={this.state.avatar.accessoriesType}\r\n            hairColor={this.state.avatar.hairColor}\r\n            hatColor={this.state.avatar.hatColor}\r\n            facialHairType={this.state.avatar.facialHairType}\r\n            clotheType={this.state.avatar.clotheType}\r\n            clotheColor={this.state.avatar.clotheColor}\r\n            skinColor={this.state.avatar.skinColor}\r\n            eyeType={this.state.avatar.eyeType}\r\n            eyebrowType={this.state.avatar.eyeType}\r\n            mouthType={this.state.avatar.eyeType}\r\n          />\r\n        </div>\r\n        <div className={styles.inputRow}>\r\n          <form\r\n            onSubmit={(event) => {\r\n              this.handleSubmit(event);\r\n            }}\r\n            className={styles.row}\r\n          >\r\n            <div className={cx(\"ui focus input\", styles.textfield)}>\r\n              <input\r\n                ref={this.myRef}\r\n                type=\"text\"\r\n                disabled={this.state.finished}\r\n                placeholder=\"Continue the script in the author's tone. Pay particular attention to the author's emotion!\"\r\n                value={this.state.inputText}\r\n                onChange={(e) => this.onTodoChange(e.target.value)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <button\r\n                type=\"submit\"\r\n                disabled={this.state.finished}\r\n                className={cx(\"ui primary button\", styles.sendButton)}\r\n              >\r\n                Send\r\n              </button>\r\n            </div>\r\n          </form>\r\n          <Button\r\n            positive\r\n            className={styles.newButton}\r\n            onClick={() => this.resetState()}\r\n          >\r\n            New Quote\r\n          </Button>\r\n        </div>\r\n        <Confetti\r\n          active={this.state.finished}\r\n          config={config}\r\n          style={{ textAlign: \"center\" }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EmpathizeView;\r\n","import React, { useState } from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Nav from \"./Nav\";\r\n\r\n// Components\r\nimport InteractionView from \"./Components/InteractionsPage/InteractionView\";\r\nimport ResultsView from \"./Components/ResultsPage/ResultsView\";\r\nimport HistoryView from \"./Components/HistoryPage/HistoryView\";\r\nimport LoginView from \"./Components/LoginPage/LoginView\";\r\nimport EmpathizeView from \"./Components/EmpathizePage/EmpathizeView\";\r\n\r\nimport { randomAvatarConfiguration } from \"./Avatar\";\r\n\r\nfunction App() {\r\n  const [auth, setAuth] = useState('');\r\n\r\n  return (\r\n    <Router>\r\n      <Nav />\r\n      <Switch>\r\n        <Route path=\"/\" exact={true} component={LoginView} />\r\n        <Route\r\n          path=\"/empathize\"\r\n          render={() => (\r\n            <EmpathizeView avatarGenerator={randomAvatarConfiguration} />\r\n          )}\r\n        />\r\n        <Route\r\n          path=\"/moodboost\"\r\n          render={() => (\r\n            <InteractionView avatarGenerator={randomAvatarConfiguration} />\r\n          )}\r\n        />\r\n        <Route\r\n          path=\"/results\"\r\n          render={() => <ResultsView userScore={-0.4} simScore={0.7} />}\r\n        />\r\n        <Route path=\"/history\" component={HistoryView} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.module.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"window\":\"ChatBot_window__IFfmJ\",\"avatar\":\"ChatBot_avatar__3xiZ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"Results_background__2tFzy\",\"width\":\"Results_width__14Hkt\",\"bottom\":\"Results_bottom__3iXFJ\",\"columns\":\"Results_columns__35uvo\",\"resultsMessage\":\"Results_resultsMessage__kalDt\"};"],"sourceRoot":""}